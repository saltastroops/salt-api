#-----------------------------------------------------------------------------------
# Adapted from https://github.com/marketplace/actions/install-poetry-action#testing
#-----------------------------------------------------------------------------------
name: Test

on: ["push", "pull_request"]

env:
  testdata_dir: cypress/salt-testdata

jobs:
  build:
    name: Test
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
      - name: Install library
        run: poetry install --no-interaction
      #----------------------------------------------
      #           clone test (mock) data
      #----------------------------------------------
      - name: Clone test data repository
        env:
          TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: git clone https://${TOKEN}@github.com/saltastroops/salt-testdata $testdata_dir
      #----------------------------------------------
      #              run test suite
      #----------------------------------------------
      - name: Run tests
        env:
          PMSM_DATA_DIR: $testdata_dir
        run: |
          source .venv/bin/activate
          pytest --mock-db-data
          coverage report
      #----------------------------------------------
      #              lint
      #----------------------------------------------
      - name: Lint
        run: ./lint.sh
