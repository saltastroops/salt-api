@Library('saao-shared-library') _

pipeline {
  agent any

  stages {
    stage('Perform linting and testing') {
      agent {
        dockerfile {
          filename 'Dockerfile'
          dir 'jenkins'
          args '-v saltapi-pipcache:/root/.cache/pypoetry -u 0:0'
        }
      }

      steps {
        sh '''
        poetry add --group=dev allure-pytest
        poetry install
        '''
        script {
          success = saao.runPythonTests(
                  'bandit': ['saltapi'],
                  'black': ['saltapi', 'tests'],
                  // 'mypy': ['saltapi'],
                  // 'pytest': ['tests'],
                  'ruff': ['saltapi', 'tests'],
                  'usePoetry': true
          )
          if (!success) {
            // error('Linting and/or testing was unsuccessful.')
          }
        }
      }
    }
  }

  post {
    always {
      script {
        saao.generatePythonTestReports()
      }
    }
    changed {
      emailext(
              body: """The pipeline status has changed to ${currentBuild.result} for the $JOB_NAME pipeline.

See full details on ${env.BUILD_URL}.
""",
              subject: "[Jenkins :: $JOB_NAME] pipeline status changed",
              to: "$SALT_ASTROOPS_EMAIL"
      )
    }
  }
}
