pipeline {
  agent any

  environment {
    ENV_FILE = credentials('salt-api-dev-env')
  }

  stages {
    stage("Build the Docker image") {
      steps {
        script {
          dockerImage = docker.build("salt-api:dev")
        }
      }
    }
    stage("Push the Docker image") {
      steps {
        script {
          docker.withRegistry("${DOCKER_REGISTRY}", "docker-registry-credentials") {
            dockerImage.push()
          }
        }
      }
    }
    stage("Deploy the image and restart the server") {
      steps {
        script {
          def compose_file = sh returnStdout: true, script: 'jenkins/dev-deployment/prepare_docker_compose.sh'
          echo "$compose_file"
          sh "cat $compose_file}"
          withCredentials(
                  [sshUserPrivateKey(credentialsId: 'salt-api-dev-server-credentials', keyFileVariable: 'identity',
                                     usernameVariable: 'username')]) {
            def remote = [:]
            remote.name = "${SALT_API_DEV_HOST}"
            remote.host = "${SALT_API_DEV_HOST}"
            remote.allowAnyHosts = true
            remote.user = username
            remote.identityFile = identity
            sshCommand remote: remote, command: 'ls -l'
          }
        }
      }
    }
  }
}
